on: [push]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://github.com/Eunice2000/owaspwithfrontend'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      # Add a step to send a message to Slack
      - name: Send Message to Slack
        run: |
          SLACK_WEBHOOK_URL=https://hooks.slack.com/services/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

          curl -X POST --data-urlencode "payload={\"channel\": \"#my-channel-here\", \"username\": \"webhookbot\", \"text\": \"This is posted to #my-channel-here and comes from a bot named webhookbot.\", \"icon_emoji\": \":ghost:\"}" $SLACK_WEBHOOK_URL


      # Send the ZAP scan report to Slack
      - name: Send ZAP Scan Report to Slack
        run: |
          SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url
          ZAP_REPORT_PATH=https://github.com/Eunice2000/owaspwithfrontend/suites/17548016084/artifacts/1002519428

          curl -X POST -H "Content-type: multipart/form-data" -F "file=@$ZAP_REPORT_PATH" -F "channels=#your-slack-channel" $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
